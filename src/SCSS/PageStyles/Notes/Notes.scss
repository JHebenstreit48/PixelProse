@use 'sass:color';
@use '@scss/Globals' as *;

/* =============================
   Local utilities (unchanged)
============================= */
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}
@mixin text-emphasis($clr, $size) {
  color: $clr;
  font: italic bold $size $font-main;
}

/* =============================
   Card shell (glass like Home)
============================= */
.card {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  width: $notes-card-width-desktop;
  margin: $notes-card-margin;
  padding: $notes-card-padding;
  line-height: 2rem;
  z-index: 1;
  border-radius: $notes-card-radius;

  position: relative;
  isolation: isolate;
  box-sizing: border-box;

  /* Glass tokens (very light brand tint) */
  --glass-blur: 26px;
  --frost-top: 0.06;
  --frost-bot: 0.02;
  --tint-top: 0.001; /* tiny but non-zero so you keep the hue */
  --tint-bot: 0.006;

  background: linear-gradient(180deg, rgba(255, 255, 255, var(--frost-top)), rgba(255, 255, 255, var(--frost-bot))),
    linear-gradient(180deg, rgba(18, 32, 112, var(--tint-top)), rgba(12, 22, 76, var(--tint-bot)));
  border: 1px solid rgba(255, 255, 255, 0.18);
  outline: 1px solid rgba(0, 255, 255, 0.18);
  outline-offset: -1px;

  backdrop-filter: blur(var(--glass-blur)) saturate(145%);
  -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(145%);

  box-shadow: 0 28px 80px rgba(0, 0, 0, 0.55), 0 0 26px rgba(0, 255, 255, 0.14), inset 0 1px 0 rgba(255, 255, 255, 0.3),
    inset 0 -1px 0 rgba(255, 255, 255, 0.05), #{$notes-card-inner}, #{$notes-card-outer};

  &::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    pointer-events: none;
    background: radial-gradient(600px 300px at 18% 18%, rgba(255, 255, 255, 0.12), transparent 65%),
      linear-gradient(145deg, rgba(255, 255, 255, 0.06), transparent 60%);
    mix-blend-mode: screen;
  }
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    pointer-events: none;
    opacity: 0.035;
    background-image: url("data:image/svg+xml;utf8,\
<svg xmlns='http://www.w3.org/2000/svg' width='120' height='120'><filter id='n'><feTurbulence type='fractalNoise' baseFrequency='0.85' numOctaves='2' stitchTiles='stitch'/></filter><rect width='120' height='120' filter='url(%23n)'/></svg>");
    background-size: 120px 120px;
  }

  /* keep side gutters on long pages */
  padding-inline: 24px;

  /* ===== Mobile centering (no clamp) ===== */
  @include maxw($cellphone-portrait) {
    width: 23rem; /* fixed cap you prefer */
    margin-left: auto;
    margin-right: auto;
  }

  /* =============================
     Markdown content
  ============================= */
  .markdownContent {
    width: $notes-md-width;
    margin: $notes-md-margin;
    padding: $notes-md-padding;

    color: #dfe4ee;
    text-shadow: none;
    letter-spacing: 0.01em;
    line-height: 1.75;
    font-size: $notes-md-font-size;

    max-width: 100%;
    overflow-wrap: anywhere;
    word-break: break-word;

    p + p {
      margin-top: 0.5rem;
    }

    @include maxw($cellphone-portrait) {
      width: 100%;
      margin: 0 auto;
      padding: 0; /* even inner gutters */
      font-size: $notes-md-font-size-mobile;
      text-align: center;
    }

    .loadingMessage {
      @include flex-center;
      margin-top: $notes-loading-margin-top;
      font-size: $notes-loading-font-size;

      @include maxw($cellphone-portrait) {
        text-align: center;
        align-items: center;
        justify-content: center;
      }
    }

    /* Headings */
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      color: #f1f3f9;
      text-shadow: none;
      font-weight: 700;
      letter-spacing: 0.01em;
      text-align: center;
      margin-left: auto;
      margin-right: auto;
      max-width: 100%;

      @include maxw($cellphone-portrait) {
        width: auto; /* remove old fixed width */
        padding: 0 4px; /* tiny balance so they “feel” centered */
      }
    }
    h1 {
      font-size: $notes-h1-size;
      margin-bottom: $notes-h-margin-bottom;
    }

    /* Links (Home-like underline) */
    a {
      color: #45b6ff;
      text-decoration: none;
      position: relative;
      transition: color 0.25s ease;

      &::after {
        content: '';
        position: absolute;
        left: 0;
        right: 0;
        bottom: -2px;
        height: 2px;
        width: 0%;
        margin-inline: auto;
        background: currentColor;
        transition: width 0.28s ease;
      }
      &:hover {
        color: color.adjust(#45b6ff, $lightness: 6%);
        &::after {
          width: 100%;
        }
      }
      &:focus-visible {
        outline: none;
        box-shadow: 0 0 0 3px color.adjust(#45b6ff, $alpha: -0.6);
        border-radius: 6px;
      }
    }

    /* Dividers */
    hr {
      border: 0;
      height: 1px;
      margin: 14px 0 22px;
      opacity: 1;
      box-shadow: none;
      background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.32) 18%,
        rgba(255, 255, 255, 0.32) 82%,
        transparent
      );
      width: 100%;
      margin-left: auto;
      margin-right: auto;
    }

    /* Emphasis helpers (kept) */
    .emphasis {
      @include text-emphasis($notes-secondary, $notes-emphasis-size);

      @include maxw($cellphone-portrait) {
        font-size: 1.1rem;
      }
    }
    .secondEmphasis {
      @include text-emphasis($notes-success, $notes-emphasis-size);
    }
    .subheadingEmphasis1 {
      @include flex-center;
      @include text-emphasis($notes-highlight, 40px);
      margin: $notes-sub1-margin;
      max-width: 100%;
      text-align: center;
    }
    .subheadingEmphasis2 {
      @include text-emphasis($notes-secondary, $notes-sub2-size);
    }
    .codeSnip {
      color: $notes-emphasis;
      font: $notes-code-font;
    }

    /* ===== Lists ===== */
    .fullWidthBullet {
      column-count: 1;

      @include maxw($cellphone-portrait) {
        text-align: left;
      }
    }

    /* ===== Tables ===== */
    .tableWrapper {
      display: flex;
      flex-direction: column;
      align-items: center;
      width: 100%;
      overflow-x: auto;

      .notesTable {
        width: 100%;
        border-collapse: collapse;
        margin: $notes-table-margin;
        table-layout: fixed;
        word-wrap: break-word;
        margin-left: auto;
        margin-right: auto;
      }

      .tableHeader {
        background-color: $notes-table-header-bg;
      }

      .tableCellHeader {
        text-align: center;
        padding: $notes-table-header-padding;
        border: $notes-table-border;
        background-color: $notes-table-cell-bg;
        font-weight: bold;
        word-wrap: break-word;
      }

      .tableRow:hover {
        background-color: rgba(255, 255, 255, 0.1);
        transition: background-color 0.3s ease-in-out;
      }

      .tableCell,
      .centeredCell {
        padding: $notes-table-cell-padding;
        text-align: left;
        border: $notes-table-border;
        background-color: $notes-table-bg;
        word-wrap: break-word;
      }

      .tableEmphasis {
        @include text-emphasis($notes-secondary, $notes-table-emphasis-size);
      }
    }

    /* ===== Code blocks ===== */
    .codeBlockWrapper {
      position: relative;
      border: $notes-code-border;
      border-radius: $notes-code-radius;
      background-color: rgba(12, 16, 38, 0.55);
      line-height: 1.5;
      overflow-x: hidden;
      width: 100%;
      margin-left: auto;
      margin-right: auto;

      div {
        margin: 0 !important;
      }

      .codeBlockHeader {
        @include flex-center;
        justify-content: space-between;
        background: $notes-code-header-bg;
        color: #fff;
        font: bold 0.9rem/1 $font-main;
        padding: $notes-code-header-padding;
        border-bottom: $notes-code-header-divider;
        border-radius: $notes-code-header-radius;
      }

      .copyCodeButton {
        background: $notes-border-subtle;
        color: #fff;
        font: normal 0.8rem/1 $font-main;
        border-radius: $notes-copy-btn-radius;
        padding: 0.25rem 0.5rem;
        cursor: pointer;

        &:hover {
          background: color.adjust($notes-border-subtle, $lightness: 10%);
        }
      }

      pre,
      code {
        line-height: 1.7 !important;
        white-space: pre-wrap !important;
        word-break: break-word !important;
        text-indent: 0 !important;
        margin: 0 !important;
        padding: 0 !important;
        overflow-x: hidden !important;
      }
    }

    /* Prism token line-height (kept) */
    .token {
      width: $notes-token-width;
      line-height: $notes-token-line-height;
    }
  }
}

/* =============================
   Reduced motion
============================= */
@media (prefers-reduced-motion: reduce) {
  .card .markdownContent a::after {
    transition: none;
  }
}